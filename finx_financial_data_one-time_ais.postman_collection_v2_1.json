{
	"info": {
		"_postman_id": "be4e6222-3e00-4c3b-be52-98391dd580a7",
		"name": "FinX Financial Data (one-time account access)",
		"description": "One-time account access to get the account data and transaction history of the users connected bank accounts.\n\nThe interaction with the collection is as follows:\n\n- Use Giro account:\n    - Paste the link into your browser\n    - Select \"Mockbank - Embedded/Decoupled\"\n    - Enter `figo01` as username and `654321` as password. Click next\n    - Select \"Auth Meth by Phone\" as SCA method and click next\n    - Enter \"123456\" as an OTP\n    - You will be redirected to localhost - copy the whole URL and put it into the `callback_url` postman environment variable\n    - Now use the \"Exchange OAuth code\" request to exchange the OAuth code for an access token.\n    - Now you can use \"Get Accounts\" or \"Get Transactions\" endpoints to get accounts or transactions of the user accordingly.\n- Use Depot account:\n    \n    - Paste the link into your browser\n    - Select \"Demobank - 90090042\"\n    - Enter `demo` as username and password\n        \n    - Select a Depot account from the list of accounts\n        \n    - Now use the \"Exchange OAuth code\" request to exchange the OAuth code for an access token.\n        \n    - Now you can use \"Get Accounts\" or \"Get Securities\" endpoints to get accounts or transactions of the user accordingly.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10164806",
		"_collection_link": "https://martian-station-516509.postman.co/workspace/2214353e-a526-4006-93de-b08ebe2014ae/collection/10164806-be4e6222-3e00-4c3b-be52-98391dd580a7?action=share&source=collection_link&creator=10164806"
	},
	"item": [
		{
			"name": "Obtain URL to start the AIS flow via Widget",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.response.to.have.status(201)",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"client_username\") || !pm.environment.get(\"client_password\")) {",
							"    throw new Error(\"Client credentials are missing: please reach out to your contact person or ask for client credentials via the form: https://qwist.com/contact\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{client_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{client_username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"state\": \"test123\",\n    \"redirect_uri\": \"http://localhost\",\n    \"language\": \"de\",\n    //\"account_types\": [\"Giro account\"],\n    //\"accounts\": [{\n    //    \"id\": \"DE07900948150000002000\"\n    //}, {\n    //    \"id\": \"DE77900948150000002001\"\n    //}],\n    \"sync_period\": 90,\n    \"allow_multi_selection\": true\n}\n\n/*\n\nMandatory request parameters: `redirect_uri`\n\nFurther useful information: \n\n- `accounts`: List IBANs that will auto-select the appropriate accounts of the user with a certain bank. If only one IBAN is provided, the provider selection will be skipped as the provider will be autoselected parsed from the IBAN)\n- `account_types`: The provided account types can be: \"Giro account\" \"Savings account\" \"Daily savings account\" \"Credit card\" \"Loan account\" \"PayPal\" and \"Depot\". If provided, only those account types can be connected by the user in the widget flow (e.g. only \"Giro account\")\n- `allow_multi-selection`: indicates whether to allow multiple accounts to be selected in the widget flow by the user. It will be ignored, if a value for \"accounts\" is set. Defaul value: \"true\"\n- `sync_period` defines the number of days of transaction history that is requested from the financial provider. Default value: 90. Many banks provide nowadays up to 365 days of transaction history. If the value is set higher then the period the respective bank can provide, the maximum possible value of the bank will be requested. No error will occur. \n\n*/",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/onetime/access",
					"host": [
						"{{host}}"
					],
					"path": [
						"onetime",
						"access"
					]
				},
				"description": "This will return a link which you need to follow. The response will contain `id` and `location` fields. Copy the value of the `location` field and put into your browser to complete the Bank account connection."
			},
			"response": []
		},
		{
			"name": "Exchange OAuth code",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.expect(pm.environment.get(\"callback_url\")).to.not.be.empty",
							"",
							"const code = pm.environment.get(\"callback_url\").split('&')[0].split('=')[1]",
							"pm.environment.set('auth_code',code)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.response.to.have.status(200)",
							"data = pm.response.json()",
							"pm.expect(data.access_token).to.not.empty",
							"pm.expect(data.refresh_token).to.not.empty",
							"",
							"pm.environment.set(\"access_token\", data.access_token)",
							"pm.environment.set(\"refresh_token\", data.refresh_token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{client_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{client_username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"grant_type\": \"authorization_code\",\n    \"code\": \"{{auth_code}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/auth/token",
					"host": [
						"{{host}}"
					],
					"path": [
						"auth",
						"token"
					]
				},
				"description": "Once you copied the URL to which you were redirected to the `callback_url` environment variable - use this request to exchange the OAuth code for an access token"
			},
			"response": []
		},
		{
			"name": "Get accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/rest/accounts",
					"host": [
						"{{host}}"
					],
					"path": [
						"rest",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/rest/transactions",
					"host": [
						"{{host}}"
					],
					"path": [
						"rest",
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get securities",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/rest/securities",
					"host": [
						"{{host}}"
					],
					"path": [
						"rest",
						"securities"
					]
				}
			},
			"response": []
		}
	]
}